name: Auto Merge, Build, and Deploy to Docker Hub

on:
  schedule:
    - cron: '0 15 * * *' # 매일 자정 00:00 (한국 시간)
  workflow_dispatch: # 수동 실행 가능

permissions:
  contents: write
  pull-requests: write

jobs:
  auto_merge_build_deploy:
    runs-on: ubuntu-latest
    outputs:
      has_new_commits: ${{ env.has_new_commits }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Git 설정
      - name: Configure Git
        run: |
          git config --global user.email "power4206@gmail.com"
          git config --global user.name "KHY90"
      # feat/* 또는 새로 생긴 브랜치에서 dev 브랜치에 새 커밋이 있는지 확인
      - name: Check for new commits in feat/* branches
        id: check_commits
        run: |
          git fetch --all
          NEW_COMMITS_COUNT=$(git rev-list --count --remotes="origin/feat/*" --not origin/dev)
          echo "Number of new commits in feat/* branches: $NEW_COMMITS_COUNT"
          if [ "$NEW_COMMITS_COUNT" -eq 0 ]; then
            echo "No new commits in feat/* branches."
            echo "has_new_commits=false" >> $GITHUB_ENV
          else
            echo "Found new commits in feat/* branches."
            echo "has_new_commits=true" >> $GITHUB_ENV
          fi
      # feat/* 브랜치의 변경 사항을 dev 브랜치로 PR 생성
      - name: Create pull request from feat/* to dev
        if: env.has_new_commits == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Attempting to create PR from feat/* branches to dev."
          gh pr create --base dev --head "$(git for-each-ref --format '%(refname:short)' refs/remotes/origin/feat/* | head -n 1)" --title "Auto merge feat/* branches into dev" --body "자동 생성된 Pull Request" || echo "PR already exists."
      # PR 자동 병합 (feat/* 브랜치 유지)
      - name: Auto-merge pull request
        if: env.has_new_commits == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_URL=$(gh pr view dev --json url --jq '.url' || echo "")
          if [ -n "$PR_URL" ]; then
            echo "Merging PR: $PR_URL"
            gh pr merge "$PR_URL" --auto || echo "Merge failed."
          else
            echo "No PR found for feat/* to dev. Skipping merge."
          fi

      # Docker 빌드 및 Docker Hub 푸시
      - name: Log in to Docker Hub
        if: env.has_new_commits == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image to Docker Hub
        if: env.has_new_commits == 'true'
        env:
          REACT_APP_LLM: ${{ secrets.REACT_APP_LLM }}
          REACT_APP_TTS: ${{ secrets.REACT_APP_TTS }}
        run: |
          docker build -t yaggugifrontapp --build-arg REACT_APP_LLM=$REACT_APP_LLM --build-arg REACT_APP_TTS=$REACT_APP_TTS .
          docker tag yaggugifrontapp:latest ${{ secrets.DOCKER_USERNAME }}/yaggugifrontapp:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/yaggugifrontapp:latest

  deploy_local:
    runs-on: self-hosted
    needs: auto_merge_build_deploy
    if: needs.auto_merge_build_deploy.outputs.has_new_commits == 'true'
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Remove existing Docker container and image
        shell: cmd
        run: |
          docker stop yaggugifrontapp 2>NUL || echo "Container not running or already stopped"
          docker rm yaggugifrontapp 2>NUL || echo "Container not found or already removed"
          docker rmi ${{ secrets.DOCKER_USERNAME }}/yaggugifrontapp:latest 2>NUL || echo "Image not found or already removed"

      - name: Pull Docker image from Docker Hub and run container
        shell: cmd
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/yaggugifrontapp:latest

          docker run -d -p 3000:3000 --name yaggugifrontapp ${{ secrets.DOCKER_USERNAME }}/yaggugifrontapp:latest

